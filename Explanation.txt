Challenges of the coursework

Challenge 1: Functionality
    - Having different types in column a meant a significant amount of code 
    was placed on type checking. As we could not use the <assert> library, 
    this was done using if statements along witht he helper functions.
    - nullptr's: nullptr's were dealt with by ensuring they would never be dereferenced.
    For example, nullptr if statements were done in the hash table, and during sorting
    the nullptr rows were removed as they would never be equal, and so the row was redundant.
    - Indexing: the method .at() was used instead of [] due to its error handling. This allowed
    for much faster debugging.
    - Duplicates: Duplicates were dealt with in the merge phase by iterating through the 
    result of the previous join to ensure all hash-join.a values would be checked
    against the current large1.a value, only if an initial match was made.

Challenge 2: Optimisations
    - 